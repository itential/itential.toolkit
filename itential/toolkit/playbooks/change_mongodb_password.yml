# Copyright (c) 2024, Itential, LLC
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
# Example usage:
# ansible-playbook -i hosts change_mongodb_password.yml"

- name: Change mongo password
  hosts: mongodb
  gather_facts: false
  tasks:
    - name: Determine database
      ansible.builtin.set_fact:
        database: "{% if user == 'admin'%}admin{% else %}{{ 'LocalAAA' if user == 'localaaa' else 'itential' }}{% endif %}"

    - name: Change mongo password
      community.mongodb.mongodb_shell:
        login_user: "{{ user }}"
        login_password: "{{ current_password }}"
        db: "{{ database }}"
        login_database: "{{ database }}"
        eval: "db.changeUserPassword('{{ user }}', '{{ new_password }}')"

- name: Update password in mongoProps in properties.json
  hosts: platform
  become: true
  gather_facts: false
  tasks:
    - name: Read properties.json
      ansible.builtin.command: "cat /opt/itential/current/properties.json"
      register: properties_raw
      when:  hostvars[groups['mongodb'][0]]['database'] == "itential"
    
    - name: Parse properties
      ansible.builtin.set_fact:
        properties: "{{ properties_raw.stdout | from_json }}"
      when: hostvars[groups['mongodb'][0]]['database'] == "itential"


    - name: Update the properties
      ansible.utils.update_fact:
        updates:
          - path: properties.mongoProps.credentials.passwd
            value: "{{ new_password }}"
      register: new_properties
      when:  hostvars[groups['mongodb'][0]]['database'] == "itential"
      
    - name: Overwrite the properties.json with new properties
      ansible.builtin.copy:
        content: "{{ new_properties.properties | to_json(indent=4)}}"
        dest: /opt/itential/current/properties.json
        remote_src: true
      when:  hostvars[groups['mongodb'][0]]['database'] == "itential"

- name: Update password in localaaa service config
  hosts: all
  gather_facts: false
  tasks:
    - name: Read properties.json
      ansible.builtin.command: "cat /opt/itential/current/properties.json"
      register: properties_raw
      when: inventory_hostname in groups['platform'] and hostvars[groups['mongodb'][0]]['database'] == "LocalAAA"
    
    - name: Parse properties
      ansible.builtin.set_fact:
        properties: "{{ properties_raw.stdout | from_json }}"
      when: inventory_hostname in groups['platform'] and hostvars[groups['mongodb'][0]]['database'] == "LocalAAA"
    
    - name: Get itential db username
      ansible.builtin.set_fact:
        itential_username: "{{ properties.mongoProps.credentials.user }}"
      when: inventory_hostname in groups['platform'] and hostvars[groups['mongodb'][0]]['database'] == "LocalAAA"
    
    - name: Get itential db password
      ansible.builtin.set_fact:
        itential_password: "{{ properties.mongoProps.credentials.passwd }}"
      when: inventory_hostname in groups['platform'] and hostvars[groups['mongodb'][0]]['database'] == "LocalAAA"
    
    - name: Update password in localaaa service config
      community.mongodb.mongodb_shell:
        login_user: "{{ hostvars[groups['platform'][0]]['itential_username'] }}"
        login_password: "{{ hostvars[groups['platform'][0]]['itential_password'] }}"
        db: "itential"
        login_database: "itential"
        eval: "db.service_configs.updateOne({'name' : 'local_aaa'}, {'$set': {'properties.properties.database.credentials.passwd': '{{ new_password }}'}})"
      when: inventory_hostname in groups['mongodb'] and hostvars[groups['mongodb'][0]]['database'] == "LocalAAA"