# Copyright (c) 2024, Itential, LLC
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
# This playbook updates the Redis `itential` user's password,
# updates the Platform properties file with the new password,
# and restarts Redis and Platform to apply the change.

# To hide sensitive data, use ansible-vault to encrypt passwords.

# Example usage:
# ansible-playbook redis_change_password.yml -i hosts \
#   -e "redis_new_password=newpass"

- name: Update Platform Configuration
  hosts: platform*
  gather_facts: false
  any_errors_fatal: true
  roles:
    - itential.toolkit.restart_platform
  tasks:
    - name: Update platform.properties with new Redis password
      ansible.builtin.replace:
        path: /etc/itential/platform.properties
        regexp: '^redis_password\s*=.*$'
        replace: "redis_password = {{ redis_new_password }}"
      notify: Restart platform

- name: Update password in Redis
  hosts: redis*
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Check that 'itential' user is present in redis.conf
      ansible.builtin.slurp:
        path: /etc/redis/redis.conf
      register: redis_conf_content
      no_log: true

    - name: Fail if 'itential' user not found in redis.conf
      ansible.builtin.fail:
        msg: "'itential' user not found in redis.conf"
      when: redis_conf_content['content'] | b64decode | regex_search('^user itential .*?>.*$', multiline=True) is none
      no_log: true

    - name: Update redis.conf with new password for 'itential' user
      ansible.builtin.replace:
        path: /etc/redis/redis.conf
        regexp: '^user itential (.*) >.*$'
        replace: 'user itential \1 >{{ redis_new_password }}'
      notify: Restart Redis
      no_log: true

  handlers:
    - name: Restart Redis
      ansible.builtin.systemd:
        name: redis
        state: restarted
